#
# This file provides an example configuration for a production OpenCog
# server. Particularly noteworthy is the list of automatically loaded
# modules.
#
# SERVER_PORT           = 17001
LOG_FILE              = /tmp/cogserver.log

# Other possible log levels are "error", "warn", "info", "debug" and "fine"
# LOG_LEVEL             = debug
LOG_LEVEL             = info
LOG_TO_STDOUT         = false
# SERVER_CYCLE_DURATION = 100

# Use this command PROMPT when telnet/terminal doesn't support ANSI
# PROMPT                = "opencog> "
# Prompt with ANSI color codes
# ANSI_PROMPT           = "[0;32mopencog[1;32m> [0m"
# Use this guile PROMPT when telnet/terminal doesn't support ANSI
# SCM_PROMPT            = "guile> "
# Prompt with ANSI color codes
# ANSI_SCM_PROMPT       = "[0;34mguile[1;34m> [0m"
# Global option so that modules know whether they should output ANSI color
# codes
# ANSI_ENABLED	       = true

# These modules are already loaded by default.
# Cogserver in OSX will automatically change .so extension to .dylib
# if .so exists.
# MODULES               = opencog/cogserver/server/libbuiltinreqs.so,
#                         opencog/cogserver/shell/libscheme-shell.so,
#                         opencog/cogserver/shell/libpy-shell.so
#
# Optional modules, not enabled by default
#                        opencog/modules/events/libatomspacepublishermodule.so
#                        opencog/learning/dimensionalembedding/libdimensionalembedding.so

# Parameters for ZeroMQ AtomSpace Event Publisher
# ZMQ_EVENT_USE_PUBLIC_IP = TRUE
# ZMQ_EVENT_PORT = 5563
